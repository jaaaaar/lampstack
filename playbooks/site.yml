---
- import_playbook: system.yml
- import_playbook: mysql.yml
- import_playbook: apache.yml
- import_playbook: php.yml
- import_playbook: wordpress.yml
- import_playbook: monitoring.yml

- name: "Paigalduse l√µplik valideerimine ja kokkuv√µte"
  hosts: lamp_servers
  gather_facts: yes
  tasks:
    - name: "Oota kuni k√µik teenused on valmis"
      wait_for:
        port: "{{ item }}"
        host: "{{ server_ip }}"
        timeout: 60
      loop:
        - 80
        - 443
      delegate_to: localhost

    - name: "Soorita l√µplik veebisaidi test"
      uri:
        url: "https://{{ server_ip }}/"
        method: GET
        status_code: [200, 301, 302]
        timeout: 30
        validate_certs: no
      delegate_to: localhost
      register: final_website_test

    - name: "Testi tervise kontrollpunkti"
      uri:
        url: "https://{{ server_ip }}/health.php"
        method: GET
        return_content: yes
        timeout: 30
        validate_certs: no
      delegate_to: localhost
      register: health_check_result

    - name: "Kogu paigalduse kokkuv√µte"
      set_fact:
        deployment_summary:
          hostname: "{{ ansible_hostname }}"
          ip_address: "{{ ansible_default_ipv4.address }}"
          domain: "{{ domain_name }}"
          php_version: "{{ ansible_local.php.version | default('Unknown') }}"
          mysql_status: "{{ 'Running' if ansible_facts.services['mysql.service'].state == 'running' else 'Not Running' }}"
          apache_status: "{{ 'Running' if ansible_facts.services['apache2.service'].state == 'running' else 'Not Running' }}"
          website_status: "{{ 'Accessible' if final_website_test.status in [200, 301, 302] else 'Not Accessible' }}"
          ssl_enabled: "{{ 'Yes' if ansible_facts.packages['openssl'] is defined else 'No' }}"
          backup_configured: "Yes"
          monitoring_configured: "Yes"
          wordpress_installed: "Yes"

    - name: "Kuva paigalduse kokkuv√µte"
      debug:
        msg:
          - "üéâ LAMP Stack Deployment Completed Successfully!"
          - ""
          - "üìã Deployment Summary:"
          - "  ‚Ä¢ Server: {{ deployment_summary.hostname }} ({{ deployment_summary.ip_address }})"
          - "  ‚Ä¢ Domain: {{ deployment_summary.domain }}"
          - "  ‚Ä¢ Apache: {{ deployment_summary.apache_status }}"
          - "  ‚Ä¢ MySQL: {{ deployment_summary.mysql_status }}"
          - "  ‚Ä¢ PHP: Installed"
          - "  ‚Ä¢ SSL: {{ deployment_summary.ssl_enabled }}"
          - "  ‚Ä¢ Website: {{ deployment_summary.website_status }}"
          - "  ‚Ä¢ WordPress: {{ deployment_summary.wordpress_installed }}"
          - "  ‚Ä¢ Monitoring: {{ deployment_summary.monitoring_configured }}"
          - "  ‚Ä¢ Backup: {{ deployment_summary.backup_configured }}"
          - ""
          - "üåê Access URLs:"
          - "  ‚Ä¢ Main site: https://{{ server_ip }}/"
          - "  ‚Ä¢ HTTPS site: https://{{ server_ip }}/"
          - "  ‚Ä¢ PHP Info: https://{{ server_ip }}/info.php"
          - "  ‚Ä¢ Health Check: https://{{ server_ip }}/health.php"
          - "  ‚Ä¢ Database Test: https://{{ server_ip }}/db_test.php"
          - "  ‚Ä¢ Monitoring Dashboard: https://{{ server_ip }}/monitor.php"
          - "  ‚Ä¢ WordPress: https://{{ server_ip }}/wordpress/"
          - ""
          - "üîß Management Commands:"
          - "  ‚Ä¢ Health Check: sudo /usr/local/bin/lamp_health_check.sh"
          - "  ‚Ä¢ Manual Backup: sudo /usr/local/bin/lamp_backup.sh"
          - "  ‚Ä¢ Monitor Logs: sudo tail -f /var/log/lamp-monitoring.log"
          - ""
          - "üìÅ Important Paths:"
          - "  ‚Ä¢ Document Root: {{ apache_document_root }}"
          - "  ‚Ä¢ Backup Directory: {{ backup_directory }}"
          - "  ‚Ä¢ Apache Config: /etc/apache2/sites-available/{{ domain_name }}.conf"
          - "  ‚Ä¢ MySQL Config: /etc/mysql/mysql.conf.d/security.cnf"
          - ""
          - "‚úÖ All services are running and accessible!"

    - name: "Salvesta paigalduse raport"
      copy:
        content: |
          LAMP Stack Deployment Report
          ===========================
          
          Deployment Date: {{ ansible_date_time.iso8601 }}
          Student: {{ student_username }}
          Server: {{ deployment_summary.hostname }} ({{ deployment_summary.ip_address }})
          Domain: {{ deployment_summary.domain }}
          
          Services Status:
          - Apache: {{ deployment_summary.apache_status }}
          - MySQL: {{ deployment_summary.mysql_status }}
          - PHP: Installed and configured
          - SSL: {{ deployment_summary.ssl_enabled }}
          - Firewall: Configured
          - Fail2ban: Installed
          
          Features Installed:
          - WordPress: {{ deployment_summary.wordpress_installed }}
          - Monitoring: {{ deployment_summary.monitoring_configured }}
          - Backup System: {{ deployment_summary.backup_configured }}
          
          Access URLs:
          - Main Site: https://{{ server_ip }}/
          - HTTPS Site: https://{{ server_ip }}/
          - WordPress: https://{{ server_ip }}/wordpress/
          - Monitoring: https://{{ server_ip }}/monitor.php
          
          Configuration Files:
          - Apache VHost: /etc/apache2/sites-available/{{ domain_name }}.conf
          - MySQL Config: /etc/mysql/mysql.conf.d/security.cnf
          - PHP Config: /etc/php/8.1/apache2/php.ini
          
          Security Features:
          - SSL/TLS certificates generated
          - Firewall configured (UFW)
          - Fail2ban intrusion prevention
          - MySQL security hardened
          - Apache security headers
          
          Monitoring & Backup:
          - Health checks every {{ check_interval }} minutes
          - Daily automated backups
          - Email notifications to {{ monitoring_email }}
          - Log rotation configured
          
          Database Information:
          - LAMP Database: {{ mysql_database }}
          - WordPress Database: {{ wordpress_db_name }}
          - Backup Location: {{ backup_directory }}
          
          Next Steps:
          1. Add {{ domain_name }} to your DNS or /etc/hosts file
          2. Complete WordPress setup at https://{{ server_ip }}/wordpress/
          3. Configure email notifications for monitoring
          4. Test backup and restore procedures
          5. Review and customize security settings
          
          Deployment completed successfully!
        dest: "/tmp/lamp_deployment_report_{{ ansible_date_time.epoch }}.txt"
        mode: '0644'

    - name: "L√µplik edukas s√µnum"
      debug:
        msg:
          - ""
          - "üèÜ LAMP STACK DEPLOYMENT SUCCESSFUL! üèÜ"
          - ""
          - "Your LAMP stack is now ready for use!"
          - "Check the deployment report at: /tmp/lamp_deployment_report_{{ ansible_date_time.epoch }}.txt"
          - ""
          - "Happy coding! üöÄ"